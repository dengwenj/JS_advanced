/**
 * 作用域是在编译的时候就确定了
 */
var age = 23

// scope chain: VO + parent scope
// 会创建 AO, AO 是在函数调用的时候创建 VO = AO
function foo() {
  console.log(age); // 23
}

function bar() {
  var age = 24
  foo()
}
bar()

/**
 * 编译时创建函数体和作用域，调用时决定 this 指向，函数调用然后编译时创建 AO，决定作用域链（AO + 编译时决定的作用域）
 */

/**
 * 编译时存储函数时存在堆里面的
 * 函数在执行的时候才进行编译！！！！！！！！！！！！
 * 遇到函数如何执行: 在执行的过程中执行到一个函数时，就会根据函数体创建一个函数执行上下文，并且压入到 EC Stack 中
 * FEC中包含三部分:
 * 1、在解析函数成 AST 树结构时，会创建一个 Activation Object(AO)
 * 2、作用域链: 由VO（在函数中就是AO对象）和父级 VO 组成，查找时会一层层查找
 * 3、this 绑定的值
 */

/**
 * 每一个执行上下文会被关联到一个变量环境（variable object VO）,在源代码中的变量和函数声明会被作为属性添加到 VO 中
 * 对于函数来说，参数也会被添加到 VO 中
 */